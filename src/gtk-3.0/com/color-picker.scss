//
// COLOR-PICKERS
//

GtkColorSwatch {
  // This widget is made of two boxes one on top of the other, the lower box is GtkColorSwatch {} the other one
  // is GtkColorSwatch > .overlay {}, GtkColorSwatch has the programmatically set background, so most of the style
  // is applied to the overlay box.

  $_colorswatch_shadow: inset 0 1px transparentize(black, 0.9);

  box-shadow: $_colorswatch_shadow;

  // take care of colorswatches on selected elements
  :selected & {
    box-shadow: none;
    &.overlay, &.overlay:hover {
      border-color: $selected_fg_color;
    }
  }

  // we need to re-set the shadow here since it get axed by the previous bit
  &:selected { box-shadow: $_colorswatch_shadow; }

  // border rounding
  &.top {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  &.bottom {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  &.left, &:first-child:not(.overlay), &:first-child:not(.top) > .overlay {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  &.right, &:last-child:not(.overlay), &:last-child:not(.bottom) > .overlay {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  &:only-child:not(.overlay), &:only-child > .overlay { border-radius: 0; }
  // nth-child is used for the custom colors row.
  // the :not() madness is needed since actually the overlay is selectable by GtkColorSwatch > .overlay
  // and GtkColorSwatch.overlay, I know it's weird, but this is gtk+.

  // hover effect
  &:hover,
  &:hover:selected {
    box-shadow: inset 0 1px transparentize($front_color, 0.6),
                inset 0 -1px transparentize($front_color, 0.6);
  }
  &:backdrop,
  &:backdrop:selected {
    background-image: none;
    box-shadow: none;
  }

  // no hover effect for the colorswatch in the color editor
  GtkColorEditor & {
    border-radius: 0; // same radius as the entry
    &:hover {
      background-image: none;
      box-shadow: inset 0 1px transparentize(black, 0.9);
    }
    &:backdrop { box-shadow: none; }
  }

  // indicator and keynav outline colors, color-dark is a color with luminosity lower then 50%
  &.color-dark {
    color: $front_color;
    outline-color: transparentize(black, 0.7);
    &:backdrop { color: transparentize($front_color, 0.7); }
  }
  &.color-light {
    color: black;
    outline-color: transparentize($front_color, 0.5);
    &:backdrop { color: transparentize(black, 0.7); }
  }

  // border color
  &.overlay,
  &.overlay:selected {
    border: 1px solid $borders_color;
    &:hover { border-color: black; }
  }

  // make the add color button looks like, well, a button
  &#add-color-button {
    border-style: solid; // the borders are drawn by the overlay for standard colorswatches to have them semi
    border-width: 1px;   // translucent on the colored background, here it's not necessary so they need to be set
    @include button(normal, normal, normal);
    &:hover { @include button(normal, normal, hover); }
    &:backdrop { @include button(normal, normal, normal); }
    .overlay { @include button(normal, normal, normal); } // reset the overlay to not cover the button style underneat
  }
}
